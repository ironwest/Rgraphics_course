digraph name {
  
  #node:
  node [shape = rectangle]
  m1[label  = '処置XXXが実施された患者数\n(N = 1000)'];
  m2[label  = '対象となり参加の同意を得た患者数\n(N = 870) \r'];
  m3[label  = '処置が成功し、対象となった最終的な患者数\n(N = 830) \r'];
  
  ex1[label = '除外 (N =130) \l 年齢が20歳未満(N=30) \r 記録が不十分(N=100) \r'];
  ex2[label = '除外 (N =40) \l 処置が失敗 (N=30) \r 同意取下(N=10) \r'];
  
  m1 -> m2;
  m2 -> m3;
  
  m1 -> ex1;
  m2 -> ex2;
  
  
}

# ここからは、edgeを利用してつないでいく方法を考えましょう。
# まずはつなぐ前段階として、ノードに適切な名前を付けていきます。
# 何が適切かは、さておき、ここではm1、m2、m3をメイン(main)のノード、
# ex1、ex2は除外されたデータ(exclude)を表すことにしておきましょう。

# とりあえず、上の、m1~m3、ex1-ex2のラベルを写してみましょう

# 写し終わったら、ノードをつなぐことを試みてください。
# じつは、m1-m3, ex1-ex2だけでは、フローチャートを描くことは「できません」
# なぜなら、dot言語で分岐部を表現するのに少しテクニックがいるからです。
# それでは、次からは、分岐を作る方法を説明していきます。