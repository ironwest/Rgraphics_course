diff
abs(diff) #点数差の絶対値
buf3 <- "苦手なのは{subject2}で{express1}、{subject1}より{abs(diff)}点{express2}結果でした。"
buf3 <- "苦手なのは{subject2}で{express1}、{subject1}より{abs(diff)}点{express2}結果でした。"
point1 <- 100
point2 <- 80
diff <- point2 - point1
express1 <- if_else(diff<0,"","すが
point1 <- 100
point2 <- 80
diff <- point2 - point1
express1 <- if_else(diff<0,"","すが")
express2 <- if_else(diff<0,"低い","高い")
str_glue(buf3)
express1 <- if_else(diff<0,"","すが")
express2 <- if_else(diff<0,"低い","高い")
str_glue(buf3)
point1 <- 80
point2 <- 100
diff <- point2 - point1
express1 <- if_else(diff<0,"","すが")
express2 <- if_else(diff<0,"低い","高い")
str_glue(buf3)
point1 <- 100
point2 <- 80
diff <- point2 - point1
express1 <- if_else(diff<0,"","すが")
express2 <- if_else(diff<0,"低い","も高い")
str_glue(buf3)
point1 <- 80
point2 <- 100
diff <- point2 - point1
express1 <- if_else(diff<0,"","すが")
express2 <- if_else(diff<0,"低い","も高い")
str_glue(buf3)
#私たちが記載したGraphVizのスクリプトは、{}ではなく<<>>で置き換えたい部分をマークしています。
#これは、digraph name {};という{や}がGraphVizでは頻出するため、{}で囲んだ部分がRのスクリプトと
#解釈するglue関数とは相性が悪いです。
#さらに、残念なことに、str_glueには{}以外を目印として伝えるオプションが動画作成時点ではないため、
#{}以外を目印とできる、glue::glue関数を利用しましょう。
buf <- "{var}ではなくて、<<var>>を置き換えられるのは、今のところglue関数"
var <- "VAR!!!"
glue::glue(buf, .open="<<", .close=">>")
library(glue)
#では、フローチャートへ適応してみましょう。
txt <- read_lines("gv/kihon_05b.gv")
txt
glue::glue(txt)
#エラーです。これは、実はglue関数、リスト形式でないとだめなのです。
#リストに変換する方法もあるのですが、ベクトルや要素を順番に処理してくれる
# map関数を利用してみましょう
vec <- c("a","b","c","d")
map(vec,print)
map(vec, c())
map(vec, c)
res <- map(vec, c)
res
res
res <- map(vec, c)
res <- map(vec, ~{c(.)})
res
map_chr(vec, ~{c})
map_chr(vec, ~{c(.)})
txt
library(DiagrammeR)
grViz("gv/intro.gv")
#まずは、.gvファイルを読み込んでみましょう。
#gvファイル、内容はただのテキストファイルなので、
library(tidyverse)
txt <- read_lines("gv/kihon_05b.gv")
DiagrammeR::grViz(diagram = txt)
teststring <- "<<first>>が僕の好きな食べ物です。<<first>>の他<<second>>も好きです。"
# こんな文章の<<>>部分を置き換えることを考えてみましょう。
str_replace(teststring,"<<first>>","りんご")
# どうでしょうか?<<first>>という部分が置きかわっています。
#ただし、二つ目の<<first>>には影響がでていません。
#　全部置き換える場合は、str_replace_allを利用しましょう
str_replace_all(teststring,"<<first>>","りんご")
# できましたね。str_**関数はパイプでつなぐことも可能なので、
teststring %>%
str_replace_all("<<first>>","りんご") %>%
str_replace_all("<<second>>","みかん")
#では、ここまでの知識を利用して、
txt
txt %>%
str_replace_all("<<first>>" ,"一つ目の置きかえ文章です") %>%
str_replace_all("<<second>>","二つ目！") %>%
str_replace_all("<<third>>"  ,"これで最後！") %>%
DiagrammeR::grViz()
?str_glue
buf <- "{subject1}が僕の得意な教科で、{point1}点をこの前の試験でとりました。"
subject1 <- "算数"
point1 <- 89
#こんな感じの変数があるとして、
str_glue(buf)
subject2 <- "国語"
point2 <- 65
buf2 <- "苦手なのは{subject2}で、{subject1}より{ abs(point2 - point1) }点{ if_else(point2-point1<0,'低い','高い') }結果でした"
str_glue(buf2)
diff <- point2 - point1 #苦手-得意な点数差
abs(diff) #点数差の絶対値
express2 <- if_else(diff<0,"低い","高い") #差がマイナスなら低いと表示、プラスなら高いと表示
buf3 <- "苦手なのは{subject2}で{express1}、{subject1}より{abs(diff)}点{express2}結果でした。"
point1 <- 100
point2 <- 80
diff <- point2 - point1
express1 <- if_else(diff<0,"","すが")
express2 <- if_else(diff<0,"低い","も高い")
str_glue(buf3)
point1 <- 80
point2 <- 100
diff <- point2 - point1
express1 <- if_else(diff<0,"","すが")
express2 <- if_else(diff<0,"低い","も高い")
str_glue(buf3)
buf <- "{var}ではなくて、<<var>>を置き換えられるのは、今のところglue関数"
var <- "VAR!!!"
glue::glue(buf, .open="<<", .close=">>")
#では、フローチャートへ適応してみましょう。
txt <- read_lines("gv/kihon_05b.gv")
map_chr(txt, ~{glue(., .open="<<", .close=">>")})
map_chr(txt, ~{glue::glue(., .open="<<", .close=">>")})
library(tidyverse)
map_chr(txt, ~{glue::glue(., .open="<<", .close=">>")})
map(txt, ~{glue::glue(., .open="<<", .close=">>")})
txt
# こんな感じになります。
# 本コースの本題とは外れるので、ここでは上記の説明で理解が難しければ
# 次のように書けば、glue関数を全ての要素に適応できると覚えておく程度
# でよいと思います。
map(txt,print)
# こんな感じになります。
# 本コースの本題とは外れるので、ここでは上記の説明で理解が難しければ
# 次のように書けば、glue関数を全ての要素に適応できると覚えておく程度
# でよいと思います。
txt
map_chr( txt,  ~{ glue::glue(., .open="<<", .close=">>") })
map_chr( txt,  ~{ glue::glue(., .open="<<", .close=">>") })
# こんな感じになります。
# 本コースの本題とは外れるので、ここでは上記の説明で理解が難しければ
# 次のように書けば、glue関数を全ての要素に適応できると覚えておく程度
# でよいと思います。
first <- "First Expression!"
second <- "Second Expression!"
third <- "Third Expression"
map_chr( txt,  ~{ glue::glue(., .open="<<", .close=">>") })
txt2 <- map_chr( txt,  ~{ glue::glue(., .open="<<", .close=">>") })
DiagrammeR::grViz(txt2)
DiagrammeR::grViz("gv/kihon_05b.gv")
DiagrammeR::grViz("gv/kihon_04b.gv")
script <- read_lines("gv/kihon_06.gv")
cat(script)
script <- read_lines("gv/kihon_06.gv", sep="\n")
cat(script)
cat(script, sep="\n")
DiagrammeR::grViz("gv/kihon_06.gv")
DiagrammeR::grViz("gv/kihon_06.gv")
DiagrammeR::grViz("gv/kihon_06.gv")
DiagrammeR::grViz("gv/kihon_06.gv")
script <- read_lines("gv/kihon_06.gv")
cat(script, sep="\n")
DiagrammeR::grViz(script)
tibble(
id = 1,
age = 34,
gender = "male",
doui = TRUE,
medicine = "A",
pre_kensa = 100,
post_kensa = 80
)
sample(0:100,1)
tibble(
id = id,
age = sample(0:100,1),
gender = sample(c("male","female"),1)
)
id <- 1
tibble(
id = id,
age = sample(0:100,1),
gender = sample(c("male","female"),1)
)
tibble(
id = id,
age = sample(0:100,1),
gender = sample(c("male","female"),1)
)
tibble(
id = id,
age = sample(0:100,1),
gender = sample(c("male","female"),1)
)
tibble(
id = id,
age = sample(0:100,1),
gender = sample(c("male","female"),1)
)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
sample(c(T,T,T,F), 1)
map(1:1000,~{sample(c(T,T,T,F), 1)}) %>% reduce(c) %>% summary()
gen_line <- function(id){
tibble(
id = id,
age = sample(0:100,1),
gender = sample(c("male","female"),1),
doui = sample(c(T,T,T,F), 1),
medicine = sample(c("A","B","C"), 1),
pre_kensa = rnorm(1,100,3),
post_kensa = rnowm(1,80,10)
)
}
gen_line
dat <- map(1:1000, gen_line) %>%
reuce(bind_rows)
gen_line <- function(id){
tibble(
id = id,
age = sample(0:100,1),
gender = sample(c("male","female"),1),
doui = sample(c(T,T,T,F), 1),
medicine = sample(c("A","B","C"), 1),
pre_kensa = rnorm(1,100,3),
post_kensa = rnorm(1,80,10)
)
}
dat <- map(1:1000, gen_line) %>%
reuce(bind_rows)
dat <- map(1:1000, gen_line) %>%
reduce(bind_rows)
dat
m1 <- nrow(dat)
m1
ex1 <- dat %>% filter(age < 20) %>% nrow()
ex1
dat3 <- dat2 %>% filter(!doui)
dat3
m1 <- nrow(dat)
dat2 <- dat %>% filter(age<20)
m2 <- nrow(dat2)
ex1 <- m1 - m2
dat3 <- dat2 %>% filter(!doui)
dat3
?%T%
a %T%
b
m1 <- nrow(dat)
ex1 <- dat %>% filter(age<20)
dat2 <- dat %>% filter(age>=20)
m2 <- nrow(dat2)
ex2 <- dat2 %>% filter(!doui)
dat3 <- dat2 %>% filter(doui)
m3 <- nrow(dat3)
map_chr(script, ~{glue::glue(.)})
map_chr(script, ~{glue::glue(., .open="<<", .close=">>")})
script <- read_lines("gv/kihon_06.gv")
cat(script, sep="\n")
DiagrammeR::grViz(script)
script
map_chr(script, ~{ glue::glue(., .open="<<", .close=">>") })
map(script, ~{ glue::glue(., .open="<<", .close=">>") })
script
DiagrammeR::grViz("gv/kihon_06.gv")
script <- read_lines("gv/kihon_06.gv")
DiagrammeR::grViz(script)
tibble(
id = 1,
age = 34,
gender = "male",
doui = TRUE,
medicine = "A",
pre_kensa = 100,
post_kensa = 80
)
gen_line <- function(id){
tibble(
id = id,
age = sample(0:100,1),
gender = sample(c("male","female"),1),
doui = sample(c(T,T,T,F), 1),
medicine = sample(c("A","B","C"), 1),
pre_kensa = rnorm(1,100,3),
post_kensa = rnorm(1,80,10)
)
}
dat <- map(1:1000, gen_line) %>%
reduce(bind_rows)
dat
m1 <- nrow(dat)
ex1 <- dat %>% filter(age<20)
dat2 <- dat %>% filter(age>=20)
m2 <- nrow(dat2)
ex2 <- dat2 %>% filter(!doui)
dat3 <- dat2 %>% filter(doui)
m3 <- nrow(dat3)
map(script, ~{ glue::glue(., .open="<<", .close=">>") })
map_chr(script, ~{ glue::glue(., .open="<<", .close=">>") })
m1 <- nrow(dat)
ex1 <- dat %>% filter(age<20)
m2 <- nrow(dat2)
dat2 <- dat %>% filter(age>=20)
ex2 <- dat2 %>% filter(!doui) %>% nrow()
dat3 <- dat2 %>% filter(doui)
m3 <- nrow(dat3)
map_chr(script, ~{ glue::glue(., .open="<<", .close=">>") })
m1
ex1
ex1 <- dat %>% filter(age<20) %>% nrow()
dat2
m2 <- nrow(dat2)
ex2 <- dat2 %>% filter(!doui) %>% nrow()
dat3 <- dat2 %>% filter(doui)
m3 <- nrow(dat3)
map_chr(script, ~{ glue::glue(., .open="<<", .close=">>") })
replaced_script <- map_chr(script, ~{ glue::glue(., .open="<<", .close=">>") })
DiagrammeR::grViz(replaced_script)
return_flowchart <- function(dat, script){
m1  <- nrow(dat)
ex1 <- dat %>% filter(age<20) %>% nrow()
dat2 <- dat %>% filter(age>=20)
m2  <- nrow(dat2)
ex2 <- dat2 %>% filter(!doui) %>% nrow()
dat3 <- dat2 %>% filter(doui)
m3 <- nrow(dat3)
replaced_script <- map_chr(script, ~{ glue::glue(., .open="<<", .close=">>") })
return(DiagrammeR::grViz(replaced_script))
}
newdat <- map(10000:10800, ~{gen_line(.)}) %>%
reduce(bind_rows)
newdat
# 去年のフローチャートは、
return_flowchart(dat,script)
# 今年のフローチャートは、
return_flowchart( bind_rows(dat, newdat), script)
# 去年のフローチャートは、
last_year_fc <- return_flowchart(dat,script)
last_year_fc
# 今年のフローチャーチは、
this_year_fc <- return_flowchart(newdat,script)
# 二年間ののフローチャートは、
two_year_fc <- return_flowchart( bind_rows(dat, newdat), script)
#まとめると、
cowplot::plot_grid(lasy_year_fc, this_year_fc, two_year_fc)
# 去年のフローチャートは、
last_year_fc <- return_flowchart(dat,script)
# 今年のフローチャーチは、
this_year_fc <- return_flowchart(newdat,script)
# 二年間ののフローチャートは、
two_year_fc <- return_flowchart( bind_rows(dat, newdat), script)
#まとめると、
cowplot::plot_grid(last_year_fc, this_year_fc, two_year_fc)
# となり、これらをファイルに保存するには、
DiagrammeR::save_graph(two_year_fc,"two_year_fc.pdf")
# 二年間ののフローチャートは、
two_year_fc <- return_flowchart( bind_rows(dat, newdat), script)
# となり、これらをファイルに保存するには、
DiagrammeR::save_graph(two_year_fc,"two_year_fc.pdf")
a<- two_year_fc
# となります。
class(a)
DiagrammeR::export_graph(a,"test.jpg")
a
install.packages("DiagrammeRsvg")
install.packages("rsvg")
two_year_fc %>%
DiagrammeRsvg::export_svg(.)
two_year_fc %>%
DiagrammeRsvg::export_svg(.) %>%
charToRaw(.)
two_year_fc %>%
DiagrammeRsvg::export_svg(.) %>%
charToRaw(.) %>%
rsvg::rsvg_pdf("fc.pdf")
DiagrammeR::grViz("gv/kihon_04b.gv")
install.pakcages("DiagrammeR")
??DiagrammeR
??DiagrammeR
DiagrammeR::grViz("gv/intro.gv")
DiagrammeR::grViz("gv/intro.dot")
# が、
#
# dot言語にある程度習熟すると、フローチャートを自動的
# に生成できるようになる等のメリットがあるためおすすめです！
#
# まずは、dot言語がどういったものかをイメージでつかんでみましょう。
#
# intro.gv
#
# を開いて、表示することをしてみましよう。
library(DiagrammeR)
grViz("gv/intro.gv")
DiagrammeR::grViz("gv/intro01.gv")
DiagrammeR::grViz("gv/intro01.gv")
DiagrammeR::grViz("gv/intro01.gv")
DiagrammeR::grViz("gv/intro01.gv")
DiagrammeR::grViz("gv/intro01.gv")
DiagrammeR::grViz("gv/intro01.gv")
DiagrammeR::grViz("gv/intro01.gv")
DiagrammeR::grViz("gv/intro02.gv")
DiagrammeR::grViz("gv/intro02.gv")
DiagrammeR::grViz("gv/intro02.gv")
DiagrammeR::grViz("gv/intro02.gv")
DiagrammeR::grViz("gv/intro02.gv")
DiagrammeR::grViz("gv/intro02.gv")
DiagrammeR::grViz("gv/intro02.gv")
DiagrammeR::grViz("gv/intro02.gv")
DiagrammeR::grViz("gv/intro02.gv")
DiagrammeR::grViz("gv/intro03.gv")
DiagrammeR::grViz("gv/intro03.gv")
DiagrammeR::grViz("gv/intro03.gv")
DiagrammeR::grViz("gv/intro03.gv")
DiagrammeR::grViz("gv/intro03.gv")
DiagrammeR::grViz("gv/intro04.gv")
DiagrammeR::grViz("gv/intro04.gv")
DiagrammeR::grViz("gv/intro04.gv")
DiagrammeR::grViz("gv/intro04.gv")
DiagrammeR::grViz("gv/intro04.gv")
DiagrammeR::grViz("gv/intro04.gv")
DiagrammeR::grViz("gv/intro05.gv")
DiagrammeR::grViz("gv/intro06.gv")
??DiagrammeR
DiagrammeR::grViz("gv/kihon_01a.gv")
DiagrammeR::grViz("gv/kihon_01a.gv")
DiagrammeR::grViz("gv/kihon_01a.gv")
DiagrammeR::grViz("gv/kihon_05a.gv")
DiagrammeR::grViz("gv/kihon_05a.gv")
DiagrammeR::grViz("gv/kihon_05a.gv")
#まずは、.gvファイルを読み込んでみましょう。
#gvファイル、内容はただのテキストファイルなので、
library(tidyverse)
DiagrammeR::grViz("gv/kihon_05b.gv")
txt <- read_lines("gv/kihon_05b.gv")
txt
DiagrammeR::grViz(diagram = txt)
teststring <- "<<first>>が僕の好きな食べ物です。<<first>>の他<<second>>も好きです。"
teststring
# この文章の<<>>部分を置き換えることを考えてみましょう。
str_replace(teststring,"<<first>>","りんご")
# どうでしょうか?<<first>>という部分が置きかわっています。
#ただし、二つ目の<<first>>には影響がでていません。
#　全部置き換える場合は、str_replace_allを利用しましょう
str_replace_all(teststring,"<<first>>","りんご")
# できましたね。str_**関数はパイプでつなぐことも可能なので、
teststring %>%
str_replace_all("<<first>>","りんご") %>%
str_replace_all("<<second>>","みかん")
teststring
txt
txt %>%
str_replace_all("<<first>>" ,"一つ目の置きかえ文章です") %>%
str_replace_all("<<second>>","二つ目！") %>%
str_replace_all("<<third>>"  ,"これで最後！") %>%
DiagrammeR::grViz()
?str_glue
buf <- "{subject1}が僕の得意な教科で、{point1}点をこの前の試験でとりました。"
buf
subject1 <- "算数"
point1 <- 89
buf
#こんな感じの変数があるとして、
str_glue(buf)
# どうでしょうか?非常に簡単に文字列に変数の内容を挿入できました。
str_c(subject1,"が僕の得意な...")
subject2 <- "国語"
point2 <- 65
buf2<-"苦手なのは{subject2}で、{subject1}より{ abs(point2 - point1) }点{ if_else(point2-point1<0,'低い','高い') }結果でした"
str_glue(buf2)
str_glue(buf2)
diff <- point2 - point1 #苦手-得意な点数差
diff
abs(diff) #点数差の絶対値
express2 <- if_else(diff<0,"低い","高い")
express2
str_glue("苦手なのは{subject2}で、{subject1}より{abs(diff)}点{express2}点数でした。")
str_glue(buf3)
buf3 <- "苦手なのは{subject2}で{express1}、{subject1}より{abs(diff)}点{express2}結果でした。"
point1 <- 100
point2 <- 80
diff <- point2 - point1
str_glue(buf3)
express2 <- if_else(diff<0,"低い","も高い")
express1 <- if_else(diff<0,"","すが")
str_glue(buf3)
point1 <- 80
point2 <- 100
diff <- point2 - point1
express1 <- if_else(diff<0,"","すが")
express2 <- if_else(diff<0,"低い","も高い")
str_glue(buf3)
